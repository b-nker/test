(()=>{let r,o,e,g,l,t,i,n,b,h,d=0,a=[];const s=fxrand(),f=fxrand(),c=fxrand(),w=[[{r:1,g:22,b:39},{r:255,g:0,b:34},{r:65,g:234,b:212},{r:253,g:255,b:252},{r:185,g:19,b:114}],[{r:57,g:61,b:63},{r:253,g:253,b:253},{r:198,g:197,b:185},{r:98,g:146,b:158},{r:84,g:106,b:123}],[{r:184,g:184,b:209},{r:91,g:95,b:151},{r:255,g:193,b:69},{r:255,g:255,b:251},{r:255,g:107,b:108}],[{r:13,g:10,b:11},{r:69,g:73,b:85},{r:243,g:239,b:245},{r:114,g:176,b:29},{r:63,g:125,b:32}],[{r:248,g:255,b:229},{r:6,g:214,b:160},{r:27,g:154,b:170},{r:239,g:71,b:111},{r:255,g:196,b:61}]],x=Math.floor(fxrand()*w.length),$=w[x],k=[.25,.5,.75,1];window.setup=()=>{createCanvas(800,800),background(0),noFill(),noLoop(),frameRate(10),r=getDivisors(width),o=getDivisors(height),e=r[Math.floor(s*r.length)],g=o[Math.floor(f*o.length)],l=width/e,t=height/g,i=k[Math.floor(fxrand()*k.length)],n=Math.floor(10*c),b=width/l,h=height/t,console.log(`widthDivisors: ${e}, heightDivisors: ${g}, colorPaletteIndex: ${x}`),console.log(`blockWidth: ${l}, blockHeight: ${t}, blockOffset: ${n}`),console.log(`gridSizeX: ${b}, gridSizeY: ${h}`)},window.draw=()=>{for(let r=0;r<h;r++)for(let o=0;o<b;o++){let e=Math.floor(fxrand()*$.length),g=Math.floor(fxrand()*$.length);d>=b+n&&(e=a[d-(b+n)].colorIndex);let h=$[e],s=$[g],f=color(h.r,h.g,h.b),c=color(s.r,s.g,s.b);fill(f),noStroke(),rect(o*l,r*t,l,t),d>=b&&(fill("black"),fill(c),rect(o*l+l*i,r*t-t*i,l/2,t/2)),a.push({blockIndex:d,colorIndex:e}),d++}},window.mousePressed=()=>{loop()},window.mouseReleased=()=>{noLoop()},window.normalizeRGB=r=>255*r,window.getDivisors=r=>{for(var o=[],e=1;e<=r;e++)r%e==0&&e<200&&o.push(e);return o}})();